FROM gradle:8.13-jdk21 AS builder

ARG HTTP_PROXY
ARG HTTPS_PROXY
ARG NO_PROXY

# Set proxy environment variables
ENV HTTP_PROXY=${HTTP_PROXY}
ENV HTTPS_PROXY=${HTTPS_PROXY}
# Ensure NO_PROXY includes Nexus domains - concatenate with comma if NO_PROXY exists
# The NEXUS_DOMAIN environment variable should be set in .env
ARG NEXUS_DOMAIN
ENV NO_PROXY=${NO_PROXY:+${NO_PROXY},}${NEXUS_DOMAIN:+*.${NEXUS_DOMAIN},}${NEXUS_DOMAIN}
ENV http_proxy=${HTTP_PROXY}
ENV https_proxy=${HTTPS_PROXY}
ENV no_proxy=${NO_PROXY:+${NO_PROXY},}${NEXUS_DOMAIN:+*.${NEXUS_DOMAIN},}${NEXUS_DOMAIN}

# Pass Nexus URLs as build args
ARG NEXUS_MAVEN_CENTRAL
ARG NEXUS_MAVEN_PUBLIC
ARG NEXUS_GRADLE
ARG NEXUS_GRADLE_PLUGINS
ARG NEXUS_WALTID

ENV NEXUS_MAVEN_CENTRAL=${NEXUS_MAVEN_CENTRAL}
ENV NEXUS_MAVEN_PUBLIC=${NEXUS_MAVEN_PUBLIC}
ENV NEXUS_GRADLE=${NEXUS_GRADLE}
ENV NEXUS_GRADLE_PLUGINS=${NEXUS_GRADLE_PLUGINS}
ENV NEXUS_WALTID=${NEXUS_WALTID}

WORKDIR /app

# Copy and import proxy certificate if provided
COPY import-cert.sh* ./
COPY proxy-cert.crt* /tmp/
RUN if [ -f import-cert.sh ] && [ -f /tmp/proxy-cert.crt ]; then \
        chmod +x import-cert.sh && \
        ./import-cert.sh /tmp/proxy-cert.crt; \
    fi

# Copy project files - the overlay system handles merging with original
COPY gradle/ gradle/
COPY settings.gradle.kts .
COPY build.gradle.kts .
COPY init.gradle .
COPY src/ src/

# Debug: Show environment variables
RUN echo "NEXUS_GRADLE=$NEXUS_GRADLE" && \
    echo "NEXUS_GRADLE_PLUGINS=$NEXUS_GRADLE_PLUGINS" && \
    echo "NEXUS_MAVEN_CENTRAL=$NEXUS_MAVEN_CENTRAL"

# Build using Nexus repositories configured in init.gradle
RUN gradle --init-script init.gradle clean bootJar --no-daemon --info \
    || (echo "Build failed. Gradle output above." && false)

FROM eclipse-temurin:21.0.8_9-jre-alpine@sha256:4ca7eff3ab0ef9b41f5fefa35efaeda9ed8d26e161e1192473b24b3a6c348aef

WORKDIR /app

COPY --from=builder /app/build/libs/*.jar app.jar

EXPOSE 8080

ENTRYPOINT ["java", "-jar", "app.jar"]
