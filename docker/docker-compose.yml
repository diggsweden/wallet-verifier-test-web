name: eudi-verifier-integration

services:
  eudi-verifier-backend:
    image: ghcr.io/eu-digital-identity-wallet/eudi-srv-web-verifier-endpoint-23220-4-kt:latest@sha256:533c233212c08aa1bce98b56eddc246e87e09a51b7b5c7f14cecf74c26fc5ae7
    container_name: eudi-verifier-backend
    hostname: eudi-verifier-backend
    ports:
      - "8080:8080"
    volumes:
      - ./keystore-p256.jks:/app/keystore-p256.jks:ro
    environment:
      VERIFIER_PUBLICURL: "${VERIFIER_PUBLICURL:-http://verifier:8080}"
      VERIFIER_RESPONSE_MODE: "DirectPostJwt"
      VERIFIER_ORIGINALCLIENTID: "${VERIFIER_ORIGINALCLIENTID:-verifier}" # localhost
      VERIFIER_CLIENTIDPREFIX: "x509_san_dns"
      VERIFIER_JAR_SIGNING_ALGORITHM: "ES256"
      VERIFIER_JAR_SIGNING_KEY: "LoadFromKeystore"
      VERIFIER_JAR_SIGNING_KEY_KEYSTORE: "file:/app/keystore-p256.jks"
      VERIFIER_JAR_SIGNING_KEY_KEYSTORE_TYPE: "jks"
      VERIFIER_JAR_SIGNING_KEY_KEYSTORE_PASSWORD: "keystore"
      VERIFIER_JAR_SIGNING_KEY_ALIAS: "verifier"
      VERIFIER_JAR_SIGNING_KEY_PASSWORD: "keystore"
      VERIFIER_VALIDATION_SDJWTVC_STATUSCHECK_ENABLED: "false"
      LOGGING_LEVEL_EU_EUROPA_EC_EUDI_VERIFIER_ENDPOINT: "DEBUG"
    restart: on-failure
    networks:
      - default

  nginx:
    image: nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
    container_name: nginx-proxy
    hostname: nginx-proxy
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - eudi-verifier-backend
      - custom-verifier
    restart: on-failure
    networks:
      - default

  custom-verifier:
    build:
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - NO_PROXY=${NO_PROXY}
        - NODE_OPTIONS=${NODE_OPTIONS}
        - NODE_EXTRA_CA_CERTS=${NODE_EXTRA_CA_CERTS}
      context: ../
      dockerfile: src/main/docker/Dockerfile.build
    container_name: custom-verifier
    hostname: custom-verifier
    ports:
      - "3002:3002"
    environment:
      HOST_API: "${NGROK_URL:-http://localhost:8000}/backend"
      PORT: "3002"
      NITRO_PORT: "3002"
      NUXT_PUBLIC_BASE_URL: "${NGROK_URL:-http://localhost:8000}"
      PUBLIC_BASE_URL: "${NGROK_URL:-http://localhost:8000}"
      WALLET_URL: "eudi-openid4vp://"
    depends_on:
      - eudi-verifier-backend
    restart: on-failure
    networks:
      - default

networks:
  default:
    driver: bridge
